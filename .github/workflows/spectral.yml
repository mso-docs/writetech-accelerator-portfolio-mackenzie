name: OpenAPI Lint (Spectral) & Build Docs (Redocly)

# Set explicit permissions for the workflow
permissions:
  contents: read
  actions: read

on:
  push:
    branches: [ main, develop ]
    paths:
      - '**/*.yaml'
      - '**/*.yml'
      - 'spectral.yml'
      - '.github/workflows/spectral.yml'
  pull_request:
    branches: [ main ]
    paths:
      - '**/*.yaml'
      - '**/*.yml'
      - 'spectral.yml'
  workflow_dispatch: {}

jobs:
  spectral-redocly:
    name: Lint OpenAPI & Build Documentation
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install Spectral & Redocly CLI
        run: |
          npm install -g @stoplight/spectral-cli @redocly/cli

      - name: Spectral lint (OpenAPI files only)
        run: |
          # Only lint files that are likely to be OpenAPI specs
          echo "Linting specific OpenAPI files..."
          
          # Lint known API files
          if [ -f "docs/docs-automation/api-doc-test1.yml" ]; then
            echo "Linting docs/docs-automation/api-doc-test1.yml..."
            spectral lint "docs/docs-automation/api-doc-test1.yml" --ruleset spectral.yml --fail-severity=error || true
          fi
          
          if [ -f "docs/docs-automation/openapi.yml" ]; then
            echo "Linting docs/docs-automation/openapi.yml..."
            spectral lint "docs/docs-automation/openapi.yml" --ruleset spectral.yml --fail-severity=error || true
          fi
          
          # Look for other potential API files in docs directories only
          find docs -name "*.yaml" -o -name "*.yml" | grep -E "(api|openapi|spec)" | while read -r file; do
            if [ -n "$file" ] && [ -f "$file" ]; then
              echo "Linting $file..."
              spectral lint "$file" --ruleset spectral.yml --fail-severity=error || true
            fi
          done

      - name: Create output directory
        run: mkdir -p dist/api-docs

      - name: Build Redocly static documentation
        run: |
          # Build documentation for Weather API
          if [ -f "docs/docs-automation/api-doc-test1.yml" ]; then
            echo "Building documentation for Weather.io Forecast API..."
            redocly build-docs docs/docs-automation/api-doc-test1.yml \
              --output dist/api-docs/weather-api.html \
              --title "Weather.io Forecast API Documentation"
          fi
          
          # Check if docs-automation openapi.yaml exists and build it too
          if [ -f "docs/docs-automation/openapi.yml" ]; then
            echo "Building documentation for docs-automation API..."
            redocly build-docs docs/docs-automation/openapi.yml \
              --output dist/api-docs/docs-automation.html
          fi

      - name: List generated files
        run: |
          echo "Generated API documentation files:"
          ls -la dist/api-docs/ || echo "No files generated"

      - name: Upload API documentation artifacts
        uses: actions/upload-artifact@v4
        with:
          name: redocly-static-site
          path: dist/api-docs/
          retention-days: 30

      # Optional: Deploy to GitHub Pages (requires Pages to be enabled)
      # Uncomment and configure if you want to deploy to GitHub Pages
      # - name: Deploy to GitHub Pages
      #   if: github.ref == 'refs/heads/main' && github.repository_owner == 'mso-docs'
      #   uses: peaceiris/actions-gh-pages@v4
      #   with:
      #     github_token: ${{ secrets.GITHUB_TOKEN }}
      #     publish_dir: ./dist/api-docs
      #     destination_dir: api-docs
